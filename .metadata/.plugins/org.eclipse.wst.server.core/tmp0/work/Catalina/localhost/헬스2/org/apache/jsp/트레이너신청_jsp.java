/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2023-08-30 04:40:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class 트레이너신청_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1693362947822L));
    _jspx_dependants.put("/header.jsp", Long.valueOf(1693366220637L));
    _jspx_dependants.put("/db_con.jsp", Long.valueOf(1693362947806L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");
 request.setCharacterEncoding("utf-8"); 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>헬스클럽관리 프로그램</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function fn_go() {\r\n");
      out.write("\tif(f.tno.value==\"00\"){\r\n");
      out.write("\t\talert(\"트레이너를 선택해주세요\");\r\n");
      out.write("\t\treturn f.tno.focus();\r\n");
      out.write("\t}\r\n");
      out.write("\tif(f.ttime.value==\"00\"){\r\n");
      out.write("\t\talert(\"시간을 선택해주세요\");\r\n");
      out.write("\t\treturn f.ttime.focus();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tf.submit();\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>여기에 제목을 입력하십시오</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

    String url = "jdbc:oracle:thin:@localhost:1521:xe";
    Class.forName("oracle.jdbc.OracleDriver");
    Connection con = DriverManager.getConnection(url, "system", "1234");
    PreparedStatement ps =null;
    ResultSet rs = null;
    String sql="";
    
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>여기에 제목을 입력하십시오</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("\t<h2>(과정평가형 정보처리기능사)헬스클럽관리 프로그램</h2>\r\n");
      out.write("</header>\r\n");
      out.write("<nav>\r\n");
      out.write("\t<a href=\"회원등록.jsp\">회원등록</a>\r\n");
      out.write("\t<a href=\"회원목록_트레이너신청.jsp\">회원목록/트레이너신청</a>\r\n");
      out.write("\t<a href=\"트레이너목록.jsp\">트레이너목록</a>\r\n");
      out.write("\t<a href=\"index.jsp\">홈으로</a>\r\n");
      out.write("</nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<section>\r\n");
      out.write("<div>\r\n");
      out.write("<h1>트레이너신청</h1>\r\n");
      out.write("</div><br><br>\r\n");
      out.write("\r\n");
      out.write("<form action=\"트레이너신청pro.jsp\" method=\"post\" name=\"f\">\r\n");
      out.write("<table border=\"1\" style=\"margin: auto;\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th style=\"text-align: center;\"> 회원번호\r\n");
      out.write("\t");
 String mname = request.getParameter("mname");
	
	   sql = "select memno, mname from member_tbl_0830 where mname=?";
	
		ps= con.prepareStatement(sql);
		ps.setString(1, mname);
		rs=ps.executeQuery();
		rs.next();
	
      out.write("\r\n");
      out.write("\t<td><input type=\"text\" name=\"memno\" value=\"");
      out.print(rs.getString(1));
      out.write("\">(자동생성)\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th style=\"text-align: center;\">회원이름\r\n");
      out.write("\t<td><input type=\"text\" name=\"mname\" value=\"");
      out.print(rs.getString(2));
      out.write("\">(자동생성)\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th style=\"text-align: center;\">트레이너\r\n");
      out.write("\t<td><select name=\"tno\">\r\n");
      out.write("\t<option value=\"00\">--선택해주세요--\r\n");
      out.write("\t<option value=\"01\">김헬스 09:00~12:00\r\n");
      out.write("\t<option value=\"02\">이헬스 12:00~15:00\r\n");
      out.write("\t<option value=\"03\">박헬스 15:00~18:00\r\n");
      out.write("\t<option value=\"04\">최헬스 18:00~21:00\r\n");
      out.write("\t</select>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th style=\"text-align: center;\">선택시간\r\n");
      out.write("\t<td><select name=\"ttime\">\r\n");
      out.write("\t<option value=\"00\">--선택해주세요--\r\n");
      out.write("\t<option value=\"09:00~12:00\">09:00~12:00\r\n");
      out.write("\t<option value=\"12:00~15:00\">12:00~15:00\r\n");
      out.write("\t<option value=\"15:00~18:00\">15:00~18:00\r\n");
      out.write("\t<option value=\"18:00~21:00\">18:00~21:00\r\n");
      out.write("\t</select>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td colspan=\"2\" style=\"text-align: center;\"><input type=\"submit\" value=\"신청\" onclick=\"fn_go(); return false;\">\r\n");
      out.write("\t<input type=\"button\" value=\"조회\" onclick=\"location='회원목록_트레이너신청.jsp'\">\r\n");
      out.write("</tr>\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>사원관리 프로그램</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<footer>\r\n");
      out.write("<b>HRDKOREA Copyrightⓒ2022 All right reserved Human Resources Development Service of Korea</b>\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
